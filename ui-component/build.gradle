plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    id 'maven-publish'
}

android {
    namespace 'android.artisan.ui.component'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.valueOf(libs.versions.sourceCompatibility.get())
        targetCompatibility JavaVersion.valueOf(libs.versions.targetCompatibility.get())
    }
    kotlinOptions {
        jvmTarget = libs.versions.jvmTarget.get()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.kotlinCompilerExtensionVersion.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    kotlin {
        explicitApi()
    }
    publishing {
        multipleVariants {
            allVariants()
        }
    }
}

dependencies {
    api libs.androidx.core

    api libs.lifecycle
    api libs.lifecycle.compose
    api libs.lifecycle.viewmodel.compose

    api libs.activity.compose
    api platform(libs.compose.bom)
    api libs.compose.ui
    api libs.compose.material
    api libs.window.size

    api libs.coil
    api libs.ratingbar

    api libs.koin
    api libs.navigation.compose
    api libs.compose.material.icons.core
    
    api libs.kotlinx.serialization.json

    debugApi libs.compose.ui.tooling.preview
    debugApi platform(libs.compose.bom)
    debugApi libs.compose.ui.tooling
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/GaurangShaha/BuildingBlocks"
            credentials {
                def propertiesFile = new File('local.properties')
                if (propertiesFile.exists()) {
                    Properties props = new Properties()
                    props.load(new FileInputStream(propertiesFile))
                    username props.getProperty("gpr.user")
                    password props.getProperty("gpr.key")
                } else {
                    username System.getenv("GITHUB_ACTOR")
                    password System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }

    publications {
        allVariants(MavenPublication) {
            groupId = "android.artisan"
            artifactId = "ui-component"
            version = "2.0.0"

            afterEvaluate {
                from components.default
            }
        }
    }
}